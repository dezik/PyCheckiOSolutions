type: checkiO
files:
- name: mission.py
  visible: true
  text: "def merge_intervals(intervals):\r\n    \"\"\"\r\n        Merge overlapped\
    \ intervals.\r\n    \"\"\"\r\n    # Your code here\r\n    return None\r\n\r\n\
    if __name__ == '__main__':\r\n    #These \"asserts\" using only for self-checking\
    \ and not necessary for auto-testing\r\n    assert merge_intervals([(1, 4), (2,\
    \ 6), (8, 10), (12, 19)]) == [(1, 6), (8, 10), (12, 19)], \"First\"\r\n    assert\
    \ merge_intervals([(1, 12), (2, 3), (4, 7)]) == [(1, 12)], \"Second\"\r\n    assert\
    \ merge_intervals([(1, 5), (6, 10), (10, 15), (17, 20)]) == [(1, 15), (17, 20)],\
    \ \"Third\"\r\n    print('Done! Go ahead and Check IT')"
  learner_created: false
status: Unchecked
code: "def merge_intervals(intervals):\r\n    \"\"\"\r\n        Merge overlapped intervals.\r\
  \n    \"\"\"\r\n    # Your code here\r\n    return None\r\n\r\nif __name__ == '__main__':\r\
  \n    #These \"asserts\" using only for self-checking and not necessary for auto-testing\r\
  \n    assert merge_intervals([(1, 4), (2, 6), (8, 10), (12, 19)]) == [(1, 6), (8,\
  \ 10), (12, 19)], \"First\"\r\n    assert merge_intervals([(1, 12), (2, 3), (4,\
  \ 7)]) == [(1, 12)], \"Second\"\r\n    assert merge_intervals([(1, 5), (6, 10),\
  \ (10, 15), (17, 20)]) == [(1, 15), (17, 20)], \"Third\"\r\n    print('Done! Go\
  \ ahead and Check IT')"
seconds_from_change: 9223372036854775807
