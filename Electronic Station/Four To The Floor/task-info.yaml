type: checkiO
files:
- name: mission.py
  visible: true
  text: "def is_covered(room, sensors):\r\n    # your code here\r\n    return True\r\
    \n\r\n\r\nif __name__ == '__main__':\r\n    print(\"Example:\")\r\n    print(is_covered([200,\
    \ 150], [[100, 75, 130]]))\r\n    \r\n    # These \"asserts\" are used for self-checking\
    \ and not for an auto-testing\r\n    assert is_covered([200, 150], [[100, 75,\
    \ 130]]) == True\r\n    assert is_covered([200, 150], [[50, 75, 100], [150, 75,\
    \ 100]]) == True\r\n    assert is_covered([200, 150], [[50, 75, 100], [150, 25,\
    \ 50], [150, 125, 50]]) == False\r\n    assert is_covered([200, 150], [[100, 75,\
    \ 100], [0, 40, 60], [0, 110, 60], [200, 40, 60], [200, 110, 60]]) == True\r\n\
    \    assert is_covered([200, 150], [[100, 75, 100], [0, 40, 50], [0, 110, 50],\
    \ [200, 40, 50], [200, 110, 50]]) == False\r\n    assert is_covered([200, 150],\
    \ [[100, 75, 110], [105, 75, 110]]) == False\r\n    assert is_covered([200, 150],\
    \ [[100, 75, 110], [105, 75, 20]]) == False\r\n    assert is_covered([3, 1], [[1,\
    \ 0, 2], [2, 1, 2]]) == True\r\n    assert is_covered([30, 10], [[0, 10, 10],\
    \ [10, 0, 10], [20, 10, 10], [30, 0, 10]]) == True\r\n    assert is_covered([30,\
    \ 10], [[0, 10, 8], [10, 0, 7], [20, 10, 9], [30, 0, 10]]) == False\r\n    print(\"\
    Coding complete? Click 'Check' to earn cool rewards!\")"
  learner_created: false
status: Unchecked
code: "def is_covered(room, sensors):\r\n    # your code here\r\n    return True\r\
  \n\r\n\r\nif __name__ == '__main__':\r\n    print(\"Example:\")\r\n    print(is_covered([200,\
  \ 150], [[100, 75, 130]]))\r\n    \r\n    # These \"asserts\" are used for self-checking\
  \ and not for an auto-testing\r\n    assert is_covered([200, 150], [[100, 75, 130]])\
  \ == True\r\n    assert is_covered([200, 150], [[50, 75, 100], [150, 75, 100]])\
  \ == True\r\n    assert is_covered([200, 150], [[50, 75, 100], [150, 25, 50], [150,\
  \ 125, 50]]) == False\r\n    assert is_covered([200, 150], [[100, 75, 100], [0,\
  \ 40, 60], [0, 110, 60], [200, 40, 60], [200, 110, 60]]) == True\r\n    assert is_covered([200,\
  \ 150], [[100, 75, 100], [0, 40, 50], [0, 110, 50], [200, 40, 50], [200, 110, 50]])\
  \ == False\r\n    assert is_covered([200, 150], [[100, 75, 110], [105, 75, 110]])\
  \ == False\r\n    assert is_covered([200, 150], [[100, 75, 110], [105, 75, 20]])\
  \ == False\r\n    assert is_covered([3, 1], [[1, 0, 2], [2, 1, 2]]) == True\r\n\
  \    assert is_covered([30, 10], [[0, 10, 10], [10, 0, 10], [20, 10, 10], [30, 0,\
  \ 10]]) == True\r\n    assert is_covered([30, 10], [[0, 10, 8], [10, 0, 7], [20,\
  \ 10, 9], [30, 0, 10]]) == False\r\n    print(\"Coding complete? Click 'Check' to\
  \ earn cool rewards!\")"
seconds_from_change: 9223372036854775807
