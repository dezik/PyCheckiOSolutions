type: checkiO
files:
- name: mission.py
  visible: true
  text: "def to_encrypt(text, delta):\r\n    #replace this for solution\r\n    return\
    \ text\r\n\r\nif __name__ == '__main__':\r\n    print(\"Example:\")\r\n    print(to_encrypt('abc',\
    \ 10))\r\n\r\n    #These \"asserts\" using only for self-checking and not necessary\
    \ for auto-testing\r\n    assert to_encrypt(\"a b c\", 3) == \"d e f\"\r\n   \
    \ assert to_encrypt(\"a b c\", -3) == \"x y z\"\r\n    assert to_encrypt(\"simple\
    \ text\", 16) == \"iycfbu junj\"\r\n    assert to_encrypt(\"important text\",\
    \ 10) == \"swzybdkxd dohd\"\r\n    assert to_encrypt(\"state secret\", -13) ==\
    \ \"fgngr frperg\"\r\n    print(\"Coding complete? Click 'Check' to earn cool\
    \ rewards!\")"
  learner_created: false
status: Unchecked
code: "def to_encrypt(text, delta):\r\n    #replace this for solution\r\n    return\
  \ text\r\n\r\nif __name__ == '__main__':\r\n    print(\"Example:\")\r\n    print(to_encrypt('abc',\
  \ 10))\r\n\r\n    #These \"asserts\" using only for self-checking and not necessary\
  \ for auto-testing\r\n    assert to_encrypt(\"a b c\", 3) == \"d e f\"\r\n    assert\
  \ to_encrypt(\"a b c\", -3) == \"x y z\"\r\n    assert to_encrypt(\"simple text\"\
  , 16) == \"iycfbu junj\"\r\n    assert to_encrypt(\"important text\", 10) == \"\
  swzybdkxd dohd\"\r\n    assert to_encrypt(\"state secret\", -13) == \"fgngr frperg\"\
  \r\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")"
seconds_from_change: 9223372036854775807
