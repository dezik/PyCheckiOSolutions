type: checkiO
files:
- name: mission.py
  visible: true
  text: "def is_majority(items: list) -> bool:\r\n    # your code here\r\n    return\
    \ items\r\n\r\n\r\nif __name__ == '__main__':\r\n    print(\"Example:\")\r\n \
    \   print(is_majority([True, True, False, True, False]))\r\n\r\n    # These \"\
    asserts\" are used for self-checking and not for an auto-testing\r\n    assert\
    \ is_majority([True, True, False, True, False]) == True\r\n    assert is_majority([True,\
    \ True, False]) == True\r\n    assert is_majority([True, True, False, False])\
    \ == False\r\n    assert is_majority([True, True, False, False, False]) == False\r\
    \n    assert is_majority([False]) == False\r\n    assert is_majority([True]) ==\
    \ True\r\n    assert is_majority([]) == False\r\n    print(\"Coding complete?\
    \ Click 'Check' to earn cool rewards!\")"
  learner_created: false
status: Unchecked
code: "def is_majority(items: list) -> bool:\r\n    # your code here\r\n    return\
  \ items\r\n\r\n\r\nif __name__ == '__main__':\r\n    print(\"Example:\")\r\n   \
  \ print(is_majority([True, True, False, True, False]))\r\n\r\n    # These \"asserts\"\
  \ are used for self-checking and not for an auto-testing\r\n    assert is_majority([True,\
  \ True, False, True, False]) == True\r\n    assert is_majority([True, True, False])\
  \ == True\r\n    assert is_majority([True, True, False, False]) == False\r\n   \
  \ assert is_majority([True, True, False, False, False]) == False\r\n    assert is_majority([False])\
  \ == False\r\n    assert is_majority([True]) == True\r\n    assert is_majority([])\
  \ == False\r\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\"\
  )"
seconds_from_change: 9223372036854775807
