type: checkiO
files:
- name: mission.py
  visible: true
  text: "#Your optional code here\n#You can import some modules or create additional\
    \ functions\n\n\ndef checkio(data):\n    out = []\n    for i in range(0,len(data)):\n\
    \        for j in range(i, len(data)):\n            if data[i] == data[j]:\n \
    \               out.append(data[j])\n    #Your code here\n    #It's main function.\
    \ Don't remove this function\n    #It's used for auto-testing and must return\
    \ a result for check.  \n    #replace this for solution\n    return out\n\n#Some\
    \ hints\n#You can use list.count(element) method for counting.\n#Create new list\
    \ with non-unique elements\n#Loop over original list\n\n\nif __name__ == \"__main__\"\
    :\n    #These \"asserts\" using only for self-checking and not necessary for auto-testing\n\
    \    assert isinstance(checkio([1]), list), \"The result must be a list\"\n  \
    \  assert checkio([1, 2, 3, 1, 3]) == [1, 3, 1, 3], \"1st example\"\n    assert\
    \ checkio([1, 2, 3, 4, 5]) == [], \"2nd example\"\n    assert checkio([5, 5, 5,\
    \ 5, 5]) == [5, 5, 5, 5, 5], \"3rd example\"\n    assert checkio([10, 9, 10, 10,\
    \ 9, 8]) == [10, 9, 10, 10, 9], \"4th example\"\n"
  learner_created: false
status: Unchecked
code: "#Your optional code here\n#You can import some modules or create additional\
  \ functions\n\n\ndef checkio(data):\n    out = []\n    for i in range(0,len(data)):\n\
  \        for j in range(i, len(data)):\n            if data[i] == data[j]:\n   \
  \             out.append(data[j])\n    #Your code here\n    #It's main function.\
  \ Don't remove this function\n    #It's used for auto-testing and must return a\
  \ result for check.  \n    #replace this for solution\n    return out\n\n#Some hints\n\
  #You can use list.count(element) method for counting.\n#Create new list with non-unique\
  \ elements\n#Loop over original list\n\n\nif __name__ == \"__main__\":\n    #These\
  \ \"asserts\" using only for self-checking and not necessary for auto-testing\n\
  \    assert isinstance(checkio([1]), list), \"The result must be a list\"\n    assert\
  \ checkio([1, 2, 3, 1, 3]) == [1, 3, 1, 3], \"1st example\"\n    assert checkio([1,\
  \ 2, 3, 4, 5]) == [], \"2nd example\"\n    assert checkio([5, 5, 5, 5, 5]) == [5,\
  \ 5, 5, 5, 5], \"3rd example\"\n    assert checkio([10, 9, 10, 10, 9, 8]) == [10,\
  \ 9, 10, 10, 9], \"4th example\"\n"
seconds_from_change: 138313939
