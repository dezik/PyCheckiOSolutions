type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    def checkio(data: list) -> list:
        return list(filter(lambda i: data.count(i) > 1, data))


    if __name__ == "__main__":
        # These "asserts" using only for self-checking and not necessary for auto-testing
        assert isinstance(checkio([1]), list), "The result must be a list"
        assert checkio([1, 2, 3, 1, 3]) == [1, 3, 1, 3], "1st example"
        assert checkio([1, 2, 3, 4, 5]) == [], "2nd example"
        assert checkio([5, 5, 5, 5, 5]) == [5, 5, 5, 5, 5], "3rd example"
        assert checkio([10, 9, 10, 10, 9, 8]) == [10, 9, 10, 10, 9], "4th example"
  learner_created: false
status: Solved
code: |
  def checkio(data: list) -> list:
      return list(filter(lambda i: data.count(i) > 1, data))


  if __name__ == "__main__":
      # These "asserts" using only for self-checking and not necessary for auto-testing
      assert isinstance(checkio([1]), list), "The result must be a list"
      assert checkio([1, 2, 3, 1, 3]) == [1, 3, 1, 3], "1st example"
      assert checkio([1, 2, 3, 4, 5]) == [], "2nd example"
      assert checkio([5, 5, 5, 5, 5]) == [5, 5, 5, 5, 5], "3rd example"
      assert checkio([10, 9, 10, 10, 9, 8]) == [10, 9, 10, 10, 9], "4th example"
seconds_from_change: 14101
