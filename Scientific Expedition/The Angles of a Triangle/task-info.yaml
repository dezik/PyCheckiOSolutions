type: checkiO
files:
- name: mission.py
  visible: true
  text: "from typing import List\r\n\r\ndef checkio(a: int, b: int, c: int) -> List[int]:\r\
    \n\r\n    #replace this for solution\r\n    return [0, 0, 0]\r\n\r\n#These \"\
    asserts\" using only for self-checking and not necessary for auto-testing\r\n\
    if __name__ == '__main__':\r\n    print(\"Example:\")\r\n    print(checkio(4,\
    \ 4, 4))\r\n\r\n    assert checkio(4, 4, 4) == [60, 60, 60], \"All sides are equal\"\
    \r\n    assert checkio(3, 4, 5) == [37, 53, 90], \"Egyptian triangle\"\r\n   \
    \ assert checkio(2, 2, 5) == [0, 0, 0], \"It's can not be a triangle\"\r\n   \
    \ print(\"Coding complete? Click 'Check' to earn cool rewards!\")"
  learner_created: false
status: Unchecked
code: "from typing import List\r\n\r\ndef checkio(a: int, b: int, c: int) -> List[int]:\r\
  \n\r\n    #replace this for solution\r\n    return [0, 0, 0]\r\n\r\n#These \"asserts\"\
  \ using only for self-checking and not necessary for auto-testing\r\nif __name__\
  \ == '__main__':\r\n    print(\"Example:\")\r\n    print(checkio(4, 4, 4))\r\n\r\
  \n    assert checkio(4, 4, 4) == [60, 60, 60], \"All sides are equal\"\r\n    assert\
  \ checkio(3, 4, 5) == [37, 53, 90], \"Egyptian triangle\"\r\n    assert checkio(2,\
  \ 2, 5) == [0, 0, 0], \"It's can not be a triangle\"\r\n    print(\"Coding complete?\
  \ Click 'Check' to earn cool rewards!\")"
seconds_from_change: 9223372036854775807
